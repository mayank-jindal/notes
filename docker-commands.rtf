{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs38 \cf2 \expnd0\expndtw0\kerning0
Docker Commands
\f1\b0\fs24 \
\
\pard\pardeftab720\partightenfactor0

\fs36 \cf2 FROM openjdk:8\
ADD target/\{name of your jar\}.jar \{name of new jar\}.jar\
EXPOSE 8080\
ENTRYPOINT [\'93java\'94, \'93-jar\'94, \'93\{name of jar\}.jar\'94]\
\
docker run is used to create a fresh container with all the information like name, port, ec.\
but docker start is used to start a stopped container using its container ID or names\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs38 \cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker -v                                                                   \'97 get the version of docker\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker build -f Dockerfile -t \{name\}                     \'97 build the docker image f:file; t:tag\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker images                                                          \'97 get all docker images\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker pull mongo                                                   \'97 pulls the image but does not run it\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker run -p 8080:8080 \{name\}                        \'97 pulls the image and runs the docker image port1:host port; port2:container port\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker ps                                                                  \'97 list of running containers\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker ps -a                                                             \'97 list of running and stopped containers\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker stop \{container ID\}                                     \'97 stop a running docker container using container ID\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker start \{container ID\}                                    \'97 start docker container\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker logs \{container ID\}/\{names\}                     \'97 to get the logs of the container\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker run -d                                                          \'97 run container in detached mode\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker run \'97name \{enter name\}                         -- run container and set the name as specified\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker exec -it \{container ID\}/\{names\} /bin/bash             \'97 interactive terminal; check any directory and stuff\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker network ls                                                   \'97 list of docker networks\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker network create \{name\}                              \'97 create a docker network with mentioned name\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
docker inspect \{container ID\}                               \'97 get info about container like IP\
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 Push and pull Image
\f1\b0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1	}\expnd0\expndtw0\kerning0
docker build -t \{image\}
\fs24 \
\ls2\ilvl0
\fs38 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
docker login
\fs24 \
\ls2\ilvl0
\fs38 \kerning1\expnd0\expndtw0 {\listtext	3	}\expnd0\expndtw0\kerning0
docker tag \{image name\} mayankjindal97/\{name\}
\fs24 \
\ls2\ilvl0
\fs38 \kerning1\expnd0\expndtw0 {\listtext	4	}\expnd0\expndtw0\kerning0
docker push mayankjindal97/\{name\}
\fs24 \
\ls2\ilvl0
\fs38 \kerning1\expnd0\expndtw0 {\listtext	5	}\expnd0\expndtw0\kerning0
docker pull mayankjindal97/\{name\}}